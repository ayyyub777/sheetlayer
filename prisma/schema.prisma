generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map(name: "sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  setup         Boolean   @default(false)
  picture       String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  connections Connection[]
  sessions    Session[]
  Spreadsheet Spreadsheet[]
  Business    Business[]

  @@map(name: "users")
}

model Connection {
  id           String   @id @default(uuid())
  userId       String
  provider     String
  accessToken  String?
  refreshToken String?
  expiresAt    DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, userId], name: "provider_user_unique")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model Business {
  id     String  @id @default(cuid())
  name   String  @unique
  type   String?
  userId String

  user User @relation(fields: [userId], references: [id])

  @@map(name: "businesses")
}

model Spreadsheet {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")
  userId    String

  user User @relation(fields: [userId], references: [id])

  @@map(name: "spreadsheets")
}
